# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T14:27:28+00:00

from __future__ import annotations

from typing import List, Optional
from uuid import UUID

from pydantic import BaseModel, Field, RootModel


class Queue(BaseModel):
    name: str = Field(..., description='Name of queue, must be unique.')


class QueueMessage(BaseModel):
    contentType: Optional[str] = Field(
        None, description='Content-type of data associated with QueueMessage.'
    )
    createDate: Optional[int] = Field(
        None, description='Date that message was received by system.'
    )
    data: Optional[str] = Field(
        None, description='Embedded JSON to be sent with Queue Message.'
    )
    href: Optional[str] = Field(
        None,
        description='URL of data associated with Queue Message (if not embedded JSON)',
    )
    messageId: Optional[UUID] = Field(
        None, description='UUID of Message Data associated with this Queue Message'
    )
    queueMessageId: Optional[UUID] = Field(
        None, description='UUID of Queue Message in local region.'
    )
    queueName: str = Field(..., description='Name of Queue for message.')
    receivingRegion: Optional[str] = Field(
        None, description='Regions to which message will be sent'
    )
    sendingRegion: Optional[str] = Field(None, description='Region from which was sent')


class QueuesQueueNameMessagesPostRequest(RootModel[List[str]]):
    root: List[str]


class StatusGetResponse(BaseModel):
    pass


class ApiResponse(BaseModel):
    count: Optional[int] = Field(
        None, description='Count of Queues or QueueMessages returned by the call.'
    )
    message: Optional[str] = Field(
        None, description='Informative message intended for client.'
    )
    queueMessages: Optional[List[QueueMessage]] = Field(
        None,
        description='Queues Messages returned by the call, or empty if not applicable.',
    )
    queues: Optional[List[Queue]] = Field(
        None, description='Queues returned but the call, or empty if not applicable.'
    )
